#!/usr/bin/env bash
set -euo pipefail
DIR="$( cd "$( dirname "${0}" )" >/dev/null 2>&1 && pwd )"
PATH=${PATH}:${DIR}
SCRIPT_NAME=$(basename "$0")

# exit 1 if any required executables are not present
for c in \
  ansible-playbook \
  docker \
  ssh-keygen \
  ssh \
  yq; \
do
  if ! command -v ${c} > /dev/null 2>&1; then
    echo "executable '${c}' not found" 1>&2
    exit 1
  fi
done

YQ() {
  ROOT_PATH=${DIR}/../

  docker run --rm -i \
    -v ${ROOT_PATH}:${ROOT_PATH} \
    -w ${PWD} \
    mikefarah/yq:4.11.1 "$@"
}

CONFIG=$(yq eval '.local.vars' ${DIR}/../inventory/local)

export IMAGE="$(basename "$(dirname ${DIR})")"
SSH_KEY="${DIR}/../$(echo "${CONFIG}" | yq eval '.ansible_ssh_private_key_file' -)"
LOCAL_ENV_DIR="$(dirname ${SSH_KEY})"

clean() {
  rm -f ${SSH_KEY}
  rm -f ${SSH_KEY}.pub
  if ! test "$(docker images -q ${IMAGE}:latest 2> /dev/null)" == ""; then
    docker image rm -f ${IMAGE}
  fi
  down
}

up() {
  # on first run, generate ssh key pair
  test -f ${SSH_KEY} || ssh-keygen -t rsa -f ${SSH_KEY} -N ""

  PASSWORD=$(echo "${CONFIG}" | yq eval '.ansible_sudo_pass' -)
  # on first run, build the image
  if test "$(docker images -q ${IMAGE}:latest 2> /dev/null)" == ""; then
    docker build \
      --build-arg ANSIBLE_USER=$(echo "${CONFIG}" | yq eval '.ansible_user' -) \
      --build-arg ANSIBLE_USER_PASSWORD=${PASSWORD} \
      -t ${IMAGE} \
      ${LOCAL_ENV_DIR}
  fi


  ENTRY="127.0.0.1 $(yq eval -j ${DIR}/../inventory/local | jq -r '.local.hosts | keys[]' | tr '\n' ' ')"
  if ! cat /etc/hosts | grep "${ENTRY}" > /dev/null 2>&1; then
    cat <<EOF 1>&2
      modify your local /etc/hosts file with the following command
      sudo privileges required

      sudo echo "${ENTRY}" >> /etc/hosts
EOF
    exit 1
  fi

  test -f ${DIR}/../reverse_proxy.conf || rev_proxy > ${DIR}/../reverse_proxy.conf

  echo "The sudo password is ${PASSWORD}"
  docker-compose \
    --project-name "${IMAGE}" \
    --file <(pipe | yq eval -) \
    up \
    --detach \
    --remove-orphans
}

down(){
  test -f ${DIR}/../reverse_proxy.conf && rm ${DIR}/../reverse_proxy.conf
  docker-compose \
    --project-name "${IMAGE}" \
    --file <(pipe | yq eval -) \
    down \
    --remove-orphans
}

shell() {
  ssh \
    -o StrictHostKeyChecking=no \
    -o UserKnownHostsFile=/dev/null \
    -o LogLevel=ERROR \
    -p ${SSH_PORT} \
    -i ${SSH_KEY} \
    $(echo "${CONFIG}" | yq eval '.ansible_user' -)@localhost
}

# execute arguments passed to ${SCRIPT_NAME}
"$@"
